-- MySQL Script generated by MySQL Workbench
-- Thu 19 Apr 2018 11:43:44 AM CDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DB_Lab
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `DB_Lab` ;

-- -----------------------------------------------------
-- Schema DB_Lab
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DB_Lab` DEFAULT CHARACTER SET utf8 ;
USE `DB_Lab` ;

-- -----------------------------------------------------
-- Table `DB_Lab`.`nonPolitician`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`nonPolitician` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`nonPolitician` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  `picture` INT NULL DEFAULT NULL,
  `firstName` VARCHAR(45) NULL DEFAULT NULL,
  `lastName` VARCHAR(45) NULL DEFAULT NULL,
  `phone` VARCHAR(45) NULL DEFAULT NULL,
  `zip` INT NULL DEFAULT NULL,
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`party`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`party` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`party` (
  `partyId` INT NOT NULL AUTO_INCREMENT,
  `partyName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`partyId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`platform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`platform` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`platform` (
  `platformId` INT NOT NULL AUTO_INCREMENT,
  `platformName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`platformId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`politicians`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`politicians` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`politicians` (
  `polId` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  `picture` INT NULL DEFAULT NULL,
  `firstName` VARCHAR(45) NULL DEFAULT NULL,
  `lastName` VARCHAR(45) NULL DEFAULT NULL,
  `partyId` INT NOT NULL,
  `phone` VARCHAR(45) NULL DEFAULT NULL,
  `website` VARCHAR(45) NULL DEFAULT NULL,
  `platformId` INT NULL DEFAULT NULL,
  `tenure` INT NULL DEFAULT NULL,
  PRIMARY KEY (`polId`),
  INDEX `partyId_idx` (`partyId` ASC),
  INDEX `platformId_idx` (`platformId` ASC),
  CONSTRAINT `partyId`
    FOREIGN KEY (`partyId`)
    REFERENCES `DB_Lab`.`party` (`partyId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `platformId`
    FOREIGN KEY (`platformId`)
    REFERENCES `DB_Lab`.`platform` (`platformId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`positions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`positions` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`positions` (
  `positionId` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`positionId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`elections`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`elections` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`elections` (
  `electionId` INT NOT NULL AUTO_INCREMENT,
  `positionId` INT NOT NULL,
  `dateTime` DATETIME NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(2) NOT NULL,
  `zip` INT(5) NOT NULL,
  PRIMARY KEY (`electionId`),
  INDEX `positionId_idx` (`positionId` ASC),
  CONSTRAINT `positionId`
    FOREIGN KEY (`positionId`)
    REFERENCES `DB_Lab`.`positions` (`positionId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`candidates`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`candidates` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`candidates` (
  `polId` INT NOT NULL,
  `electionId` INT NOT NULL,
  PRIMARY KEY (`polId`, `electionId`),
  INDEX `electionId_idx` (`electionId` ASC),
  CONSTRAINT `accountId`
    FOREIGN KEY (`polId`)
    REFERENCES `DB_Lab`.`politicians` (`polId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `electionId`
    FOREIGN KEY (`electionId`)
    REFERENCES `DB_Lab`.`elections` (`electionId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`favorites`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`favorites` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`favorites` (
  `userId` INT NOT NULL,
  `polId` INT NOT NULL,
  PRIMARY KEY (`userId`, `polId`),
  INDEX `polId_idx` (`polId` ASC),
  CONSTRAINT `userID`
    FOREIGN KEY (`userId`)
    REFERENCES `DB_Lab`.`nonPolitician` (`userId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `polId`
    FOREIGN KEY (`polId`)
    REFERENCES `DB_Lab`.`politicians` (`polId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`polLoc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`polLoc` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`polLoc` (
  `polId` INT NOT NULL,
  `zipcode` INT NOT NULL,
  PRIMARY KEY (`polId`,`zipcode`),
  INDEX `polId_idx` (`polId` ASC),
  CONSTRAINT `polLoc`
    FOREIGN KEY (`polId`)
    REFERENCES `DB_Lab`.`politicians` (`polId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`uniqueIds`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`uniqueIds` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`uniqueIds` (
  `uniqueId` INT NOT NULL AUTO_INCREMENT,
  `isPol` INT(1) NOT NULL,
  `UID` INT NOT NULL,
  PRIMARY KEY (`uniqueId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`phone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`phone` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`phone` (
  `phoneId` INT NOT NULL AUTO_INCREMENT,
  `UID` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `number` INT(10) NOT NULL,
  PRIMARY KEY (`phoneId`),
  INDEX `UID_idx` (`UID` ASC),
  CONSTRAINT `UID`
    FOREIGN KEY (`UID`)
    REFERENCES `DB_Lab`.`uniqueIds` (`uniqueId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`pictures`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`pictures` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`pictures` (
  `partyId` INT NOT NULL,
  `picture` BLOB NULL,
  PRIMARY KEY (`partyId`),
  CONSTRAINT `fk_pictures_1`
    FOREIGN KEY (`partyId`)
    REFERENCES `DB_Lab`.`party` (`partyId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Lab`.`session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_Lab`.`session` ;

CREATE TABLE IF NOT EXISTS `DB_Lab`.`session` (
  `sessionId` INT NOT NULL AUTO_INCREMENT,
  `UID` INT NOT NULL,
  `expirationDate` DATETIME NOT NULL,
  PRIMARY KEY (`sessionId`),
  INDEX `User_idx` (`UID` ASC),
  CONSTRAINT `SessionUser`
    FOREIGN KEY (`UID`)
    REFERENCES `DB_Lab`.`uniqueIds` (`uniqueId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


CREATE TRIGGER after_nonPolitician_insert 
  AFTER INSERT ON `DB_Lab`.`nonPolitician`
  FOR EACH ROW 
  INSERT INTO `DB_Lab`.`uniqueIds` (`isPol`,`UID`) VALUES (0,new.userId);

CREATE TRIGGER after_politicians_insert
  AFTER INSERT ON `DB_Lab`.`politicians`
  FOR EACH ROW
  INSERT INTO `DB_Lab`.`uniqueIds` (`isPol`,`UID`) VALUES (1,new.polId);

-- CREATE TRIGGER after_nonPolitician_delete
--   AFTER DELETE ON `DB_Lab`.`nonPolitician`
--   FOR EACH ROW
--   DELETE FROM `DB_Lab`.`uniqueIds` WHERE `isPol` = 1 AND `UID` = old.userId;
  
-- CREATE TRIGGER after_politicians_delete
--   AFTER DELETE ON `DB_Lab`.`politicians`
--   FOR EACH ROW
--   DELETE FROM `DB_Lab`.`uniqueIds` WHERE `isPol` = 1 AND `UID` = old.polId;

DELIMITER $$
CREATE TRIGGER after_uniqueIds_delete
  AFTER DELETE ON `DB_Lab`.`uniqueIds`
  FOR EACH ROW
  BEGIN
    IF (old.isPol=1) THEN
      DELETE FROM `DB_Lab`.`politicians` WHERE `polId` = old.UID;
    ELSE
      DELETE FROM `DB_Lab`.`nonPolitician` WHERE `userId`= old.UID;
    END IF;
  END;
$$
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `DB_Lab`.`nonPolitician`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_Lab`;
INSERT INTO `DB_Lab`.`nonPolitician` (`username`,`password`,`email`,`picture`,`firstName`,`lastName`,`phone`,`zip`) VALUES ('yyyy','password','abe@gmail.com',null,'Abe','Willian',null,22477);
INSERT INTO `DB_Lab`.`nonPolitician` (`username`,`password`,`email`,`picture`,`firstName`,`lastName`,`phone`, `zip`) VALUES ('rc32','123',null,null,'Weaver','Bob',null,34332);
INSERT INTO `DB_Lab`.`nonPolitician` (`username`,`password`,`email`,`picture`,`firstName`,`lastName`,`phone`,`zip`) VALUES ('i11Pc','abc','will2@smu.edu',null,'Will','Roberson',null,75205);
COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_Lab`.`party`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_Lab`;
INSERT INTO `DB_Lab`.`party` (`partyName`) VALUES ('Republican');
INSERT INTO `DB_Lab`.`party` (`partyName`) VALUES ('Democrat');
INSERT INTO `DB_Lab`.`party` (`partyName`) VALUES ('Libertarian');
INSERT INTO `DB_Lab`.`party` (`partyName`) VALUES ('Tea Party');
INSERT INTO `DB_Lab`.`party` (`partyName`) VALUES ('Illuminati');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_Lab`.`platform`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_Lab`;
INSERT INTO `DB_Lab`.`platform` (`platformName`) VALUES ('Gun Control');
INSERT INTO `DB_Lab`.`platform` (`platformName`) VALUES ('Immigration');
INSERT INTO `DB_Lab`.`platform` (`platformName`) VALUES ('National Security');
INSERT INTO `DB_Lab`.`platform` (`platformName`) VALUES ('Environment');
INSERT INTO `DB_Lab`.`platform` (`platformName`) VALUES ('Health Care');
INSERT INTO `DB_Lab`.`platform` (`platformName`) VALUES ('Economy');
INSERT INTO `DB_Lab`.`platform` (`platformName`) VALUES ('Free College');
INSERT INTO `DB_Lab`.`platform` (`platformName`) VALUES ('Legalize Weed');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_Lab`.`politicians`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_Lab`;
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('Jsmith', 'smithy', 'jsmith@rep.gov', NULL, 'John', 'Smith', 1, NULL, NULL, NULL,20);
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('Rwilliams', 'freewilly', 'rwilliams@dem.gov', NULL, 'Rebeccah', 'Williams', 2, NULL, NULL, 1,12);
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('Broham', 'brosbeforehoes', 'broham@teaparty.org', NULL, 'Barry', 'Roham', 3, NULL, NULL, NULL,10);
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('The_Donald', 'maga', 'donald@trump.org', NULL, 'Donald', 'Trump', 1, NULL, NULL, 3,10);
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('H_Clinton', 'ihatetrump', 'hilary@privateserver.gov', NULL, 'Hilary', 'Clinton', 2, NULL, NULL, 1,10);
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('Bernstar', 'freecollege', 'bernie.sanders@gmail.com', NULL, 'Bernie', 'Sanders', 2, NULL, NULL, 7,10);
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('Ted', 'zodiac', 'tedcruz@tedcruz.net', NULL, 'Ted', 'Cruz', 1, NULL, NULL, 3,10);
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('LilMarco', '01011100', 'marcorubio@marcorubio.com', NULL, 'Marco', 'Rubio', 1, NULL, NULL, 3,10);
INSERT INTO `DB_Lab`.`politicians` (`username`, `password`, `email`, `picture`, `firstName`, `lastName`, `partyId`, `phone`, `website`, `platformId`,`tenure`) VALUES ('Gary!', 'aleppo', 'gary@greenparty.com', NULL, 'Gary', 'Johnson', 3, NULL, NULL, 8,10);







COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_Lab`.`uniqueIds`
-- -----------------------------------------------------
-- START TRANSACTION;
-- USE `DB_Lab`;
-- INSERT INTO `DB_Lab`.`uniqueIds` (`isPol`, `UID`) VALUES (1,1);
-- INSERT INTO `DB_Lab`.`uniqueIds` (`isPol`, `UID`) VALUES (1,2);
-- INSERT INTO `DB_Lab`.`uniqueIds` (`isPol`, `UID`) VALUES (1,3);
-- INSERT INTO `DB_Lab`.`uniqueIds` (`isPol`, `UID`) VALUES (0,1);
-- INSERT INTO `DB_Lab`.`uniqueIds` (`isPol`, `UID`) VALUES (0,2);
-- INSERT INTO `DB_Lab`.`uniqueIds` (`isPol`, `UID`) VALUES (0,3);

-- COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_Lab`.`positions`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_Lab`;
INSERT INTO `DB_Lab`.`positions` (`name`) VALUES ('Governor');
INSERT INTO `DB_Lab`.`positions` (`name`) VALUES ('Senator');
INSERT INTO `DB_Lab`.`positions` (`name`) VALUES ('Representative');
INSERT INTO `DB_Lab`.`positions` (`name`) VALUES ('Judge');
INSERT INTO `DB_Lab`.`positions` (`name`) VALUES ('President');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_Lab`.`elections`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_Lab`;
INSERT INTO `DB_Lab`.`elections` (`positionId`, `dateTime`, `city`, `state`,`zip`) VALUES (1, '2018-10-12', 'Austin', 'TX', 78730);
INSERT INTO `DB_Lab`.`elections` (`positionId`, `dateTime`, `city`, `state`,`zip`) VALUES (2, '2020-02-24', 'Cincinnatti', 'CT', 22727);
INSERT INTO `DB_Lab`.`elections` (`positionId`, `dateTime`, `city`, `state`,`zip`) VALUES (3, '2020-03-23', 'Rhode Island', 'MA', 34334);
INSERT INTO `DB_Lab`.`elections` (`positionId`, `dateTime`, `city`, `state`,`zip`) VALUES (3, '2020-10-8', 'Fort Worth', 'TX', 22477);
INSERT INTO `DB_Lab`.`elections` (`positionId`, `dateTime`, `city`, `state`,`zip`) VALUES (3, '2020-10-8', 'Dallas', 'TX', 75205);
INSERT INTO `DB_Lab`.`elections` (`positionId`, `dateTime`, `city`, `state`,`zip`) VALUES (3, '2024-10-8', 'Las Vegas', 'NV', 34332);
INSERT INTO `DB_Lab`.`elections` (`positionId`, `dateTime`, `city`, `state`,`zip`) VALUES (3, '2028-10-8', 'New York City', 'NY', 22333);

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_Lab`.`candidates`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_Lab`;
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (1, 1);
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (2, 3);
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (3, 2);
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (4, 4);
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (5, 4);
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (6, 5);
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (7, 5);
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (8, 6);
INSERT INTO `DB_Lab`.`candidates` (`polId`, `electionId`) VALUES (9, 6);

COMMIT;

-- -----------------------------------------------------
-- Data for table `DB_Lab`.`favorites`
-- -----------------------------------------------------
START TRANSACTION;
USE  `DB_Lab`;
INSERT INTO `DB_Lab`.`favorites` (`userId`, `polId`) VALUES (1, 1);
INSERT INTO `DB_Lab`.`favorites` (`userId`, `polId`) VALUES (1, 2);
INSERT INTO `DB_Lab`.`favorites` (`userId`, `polId`) VALUES (2, 2);
INSERT INTO `DB_Lab`.`favorites` (`userId`, `polId`) VALUES (3, 3);

COMMIT;

-- -----------------------------------------------------
-- Data for table `DB_Lab`.`polLoc`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_Lab`;
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (1,78730);
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (3,22727);
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (2,34334);
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (4,22477);
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (5,22477);
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (6,75205);
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (7,75205);
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (8,34332);
INSERT INTO `DB_Lab`.`polLoc` (`polId`,`zipcode`) VALUES (9,34332);

COMMIT;